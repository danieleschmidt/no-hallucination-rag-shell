version: '3.8'

services:
  no-hallucination-rag:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: no-hallucination-rag
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
    volumes:
      - rag_data:/opt/no-hallucination-rag/data
      - rag_cache:/opt/no-hallucination-rag/cache
      - rag_logs:/var/log/no-hallucination-rag
      - ./configs:/opt/no-hallucination-rag/configs:ro
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "python", "-c", "from no_hallucination_rag import FactualRAG; rag=FactualRAG(); print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - rag_network
    
  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:v2.40.0
    container_name: rag-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - rag_network
      
  # Optional: Grafana for dashboards
  grafana:
    image: grafana/grafana:9.3.0
    container_name: rag-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - rag_network
      
  # Optional: Redis for advanced caching
  redis:
    image: redis:7-alpine
    container_name: rag-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - rag_network

volumes:
  rag_data:
    driver: local
  rag_cache:
    driver: local
  rag_logs:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  redis_data:
    driver: local

networks:
  rag_network:
    driver: bridge